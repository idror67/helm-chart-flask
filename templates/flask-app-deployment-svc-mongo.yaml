apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  labels:
    app: flask-app
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: flask-app
  template: #pod defintion
    metadata:
      labels:
        app: flask-app
    spec: # container specs
      containers:
        - name: flask-app
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5052
          env:
          - name: DATABASE_TYPE
            valueFrom:
              configMapKeyRef:
                name: flask-configmap
                key: DATABASE_TYPE
          - name: MONGO_URI
            valueFrom:
              configMapKeyRef:
                name: flask-configmap
                key: MONGO_URI
          - name: DB_HOST
            valueFrom:
              configMapKeyRef:
                name: flask-configmap
                key: db_url

{{ if eq .Values.database.type "MONGO" }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:4.4.6
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
      volumes:
        - name: mongo-data
          persistentVolumeClaim:
            claimName: mongo-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: "standard"
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
spec:
  selector:
    app: mongo
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-express
  labels:
    app: mongo-express
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mongo-express
  template:
    metadata:
      labels:
        app: mongo-express
    spec:
      containers:
        - name: mongo-express
          image: mongo-express:1.0.2-20-alpine3.19
          ports:
            - containerPort: 8081
          env:
            - name: ME_CONFIG_MONGODB_SERVER
              valueFrom:
                configMapKeyRef:
                  name: flask-configmap
                  key: MONGO_HOST
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-express-service
spec:
  selector:
    app: mongo-express
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: {{ .Values.service.mongoExpressPort }}
      targetPort: 8081
{{ end }}

{{ if eq .Values.database.type "MYSQL" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: phpmyadmin
  labels:
    app: phpmyadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: phpmyadmin
  template:
    metadata:
      labels:
        app: phpmyadmin
    spec:
      containers:
        - name: phpmyadmin
          image: phpmyadmin
          ports:
            - containerPort: 80
          env:
            - name: PMA_HOST
              value: mysql-service
---
apiVersion: v1
kind: Service
metadata:
  name: phpmyadmin-service
spec:
  selector:
    app: phpmyadmin
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 5012
      targetPort: 80
{{ end }}

---
apiVersion: v1
kind: Service
metadata:
 name: flask-app-service
spec:
 selector:
   app: flask-app
 type: LoadBalancer
 ports:
   - protocol: TCP
     port: {{ .Values.service.flaskPort }}
     targetPort: 5052

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: flask-configmap
data:
  DATABASE_TYPE: {{ .Values.database.type }}
  MONGO_URI: mongodb://{{ .Values.database.mongo.host }}:{{ .Values.database.mongo.port }}/{{ .Values.database.mongo.databaseName }}
  MONGO_HOST: {{ .Values.database.mongo.host }}
  db_url: {{ .Values.database.mysql.host }}
  my.cnf: |
    [mysqld]
    transaction-isolation = READ-COMMITTED